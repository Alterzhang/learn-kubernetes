1.创建用户
kubelet 启动时向 kube-apiserver 发送 TLS bootstrapping 请求，需要先将 bootstrap token 文件中的 kubelet-bootstrap 用户赋予 system:node-bootstrapper cluster 角色(role)， 然后 kubelet 才能有权限创建认证请求(certificate signing requests)：

kubectl create clusterrolebinding kubelet-bootstrap \
  --clusterrole=system:node-bootstrapper \
  --user=kubelet-bootstrap
kubelet 通过认证后向 kube-apiserver 发送 register node 请求，需要先将 kubelet-nodes 用户赋予 system:node cluster角色(role) 和 system:nodes 组(group)， 然后 kubelet 才能有权限创建节点请求：
kubectl create clusterrolebinding kubelet-nodes \
  --clusterrole=system:node \
  --group=system:nodes
  2.配置kubelet 配置文件
  主机：10.204.243.132
  cat /app/kubernetes/config/kubelet
KUBELET_ARGS=" --pod-infra-container-image=10.204.57.39.com/common/pause-amd64:3.0 --runtime-cgroups=/systemd/system.slice --bootstrap-kubeconfig=/app/kubernetes/ssl/bootstrap.kubeconfig --kubeconfig=/app/kubernetes/ssl/kubelet.kubeconfig --cert-dir=/app/kubernetes/ssl --image-pull-progress-deadline=15m --root-dir=/app/kubernetes/data/kubelet  "
LOGS="--logtostderr=false --v=2 --log-dir=/app/kubernetes/logs"
CONFIG="--config=/app/kubernetes/config/kubelet-config.yaml"
HOSTNAME="--hostname-override=10.204.243.132"


cat /usr/lib/systemd/system/kubelet.service 

[Unit]
Description=Kubernetes Kubelet Server
Documentation=https://github.com/GoogleCloudPlatform/kubernetes
After=docker.service
Requires=docker.service

[Service]
WorkingDirectory=/app/kubernetes/data/kubelet
EnvironmentFile=-/app/kubernetes/config/kubelet
ExecStart=/app/kubernetes/bin/kubelet $KUBELET_ARGS $LOGS $CONFIG $HOSTNAME 
Restart=on-failure

[Install]
WantedBy=multi-user.target


systemctl enable kubelet && systemctl start kubelet


  
